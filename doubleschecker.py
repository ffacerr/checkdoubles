import streamlit as st
import pandas as pd
import re

def normalize_phone(phone):
    digits = re.sub(r'\D', '', str(phone))
    if len(digits) == 10:
        return '+1' + digits
    elif len(digits) == 11 and digits.startswith('1'):
        return '+' + digits
    return digits

st.title("üîç –ü–æ–∏—Å–∫ –¥—É–±–ª–µ–π –≤ –≤—ã–≥—Ä—É–∑–∫–µ –∏–∑ CRM")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ .xlsx —Ñ–∞–π–ª", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file, header=0)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
    if df.shape[1] < 50:
        st.error("–û—à–∏–±–∫–∞: –≤ —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 50 —Å—Ç–æ–ª–±—Ü–æ–≤.")
    else:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        df_extracted = pd.DataFrame()
        df_extracted["A"] = df.iloc[:, 0]   # A
        df_extracted["H"] = df.iloc[:, 7]   # H
        df_extracted["D"] = df.iloc[:, 3]   # D
        df_extracted["AU"] = df.iloc[:, 49] # AU
        df_extracted["AX"] = df.iloc[:, 52] # AX
        df_extracted["AX_normalized"] = df_extracted["AX"].apply(normalize_phone)

        duplicates = pd.DataFrame()

        for column, label in [('D', 'D'), ('AU', 'AU'), ('AX_normalized', 'AX (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω)')]:
            # –¢–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å –Ω–µ–ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ —ç—Ç–æ–º —Å—Ç–æ–ª–±—Ü–µ
            non_empty = df_extracted[df_extracted[column].notna() & df_extracted[column].ne('')]

            dupes = non_empty[non_empty.duplicated(column, keep=False)].copy()
            if not dupes.empty:
                dupes['–î—É–±–ª–∏–∫–∞—Ç –ø–æ'] = label
                dupes['–ì—Ä—É–ø–ø–∞'] = dupes[column]  # –î–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
                duplicates = pd.concat([duplicates, dupes])

        if duplicates.empty:
            st.success("‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            duplicates = duplicates.drop_duplicates(subset=["A", "D", "AU", "AX_normalized", "–î—É–±–ª–∏–∫–∞—Ç –ø–æ"])
            duplicates = duplicates.sort_values(by=["–î—É–±–ª–∏–∫–∞—Ç –ø–æ", "–ì—Ä—É–ø–ø–∞"])

            st.warning(f"üîÅ –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {len(duplicates)} —Å—Ç—Ä–æ–∫")
            st.dataframe(duplicates[["A", "H", "D", "AU", "AX", "AX_normalized", "–î—É–±–ª–∏–∫–∞—Ç –ø–æ"]])

            csv = duplicates.to_csv(index=False)
            st.download_button("üì• –°–∫–∞—á–∞—Ç—å CSV", csv, "–¥—É–±–ª–∏–∫–∞—Ç—ã.csv", "text/csv")
